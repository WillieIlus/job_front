import{K as n,L as s,M as c}from"./entry.bb66115f.js";const h=n("category",{state:()=>({categories:[],currentPage:1,itemsPerPage:12,category:null,loading:!1,error:null}),getters:{getCategories:e=>e.categories,getCategory:e=>e.category,paginatedCategories:e=>{const t=(e.currentPage-1)*e.itemsPerPage,r=t+e.itemsPerPage;return e.categories.slice(t,r)},totalCategories:e=>e.categories.length,totalPages:e=>Math.ceil(e.categories.length/e.itemsPerPage)},actions:{async fetchCategories(){this.loading=!0;try{const t=await(await fetch(`${s}/categories`)).json();this.categories=t}catch(e){console.error(e)}finally{this.loading=!1}},async fetchCategory(e){this.loading=!0;try{const r=await(await fetch(`${s}/categories/${e}`)).json();this.category=r}catch(t){console.error(t)}finally{this.loading=!1}},async createCategory(e,t){this.loading=!0;const r=c();try{const a=await fetch(`${s}/categories/`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r.token}`},body:JSON.stringify({name:e,description:t})});if(!a.ok){const i=await a.json();throw console.error("Bad Request Error:",i),new Error(i.detail)}const o=await a.json();this.categories.push(o)}catch(a){console.error(a),this.error=a.message}finally{this.loading=!1}},async updateCategory(e,t){try{const a=await(await fetch(`${s}/categories/${e}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).json();this.categories=this.categories.map(o=>o.slug===e?a:o)}catch(r){console.error(r),this.error=r.message}finally{this.loading=!1}},setCurrentPage(e){const t=Math.ceil(this.categories.length/this.itemsPerPage);this.currentPage=Math.max(1,Math.min(t,e))}}});export{h as u};
